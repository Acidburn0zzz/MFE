		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude-mfe-hooks 2.7.1 built: Aug 31 2016 12:24:20
	     With termination checker extension 
	    Copyright 1997-2016 SRI International
		   Tue Sep 27 10:48:56 2016

	    Full Maude 2.7e September 22th 2016

The Maude Formal Environment 1.0b
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3p - August 30th 2016
    Coherence Checker 3p - August 30th 2016
    Maude Termination Tool 1.5j - August 11th 2014

==========================================
reduce in MNAT-EXT-MLIST : insertion-sort(5 4 3 2 1 0) .
rewrites: 223 in 0ms cpu (0ms real) (6027027 rewrites/second)
result NeList{TOSET}{NatAsToset}: 0 s 0 s s 0 s s s 0 s s s s 0 s s s s s 0
==========================================
reduce in MNAT-EXT-MLIST : mergesort(5 3 1 0 2 4) .
rewrites: 295 in 0ms cpu (0ms real) (2521367 rewrites/second)
result NeList{TOSET}{NatAsToset}: 0 s 0 s s 0 s s s 0 s s s s 0 s s s s s 0
==========================================
reduce in MNAT-EXT-MLIST : quicksort(0 1 2 5 4 3) .
rewrites: 404 in 0ms cpu (0ms real) (21263157 rewrites/second)
result NeList{TOSET}{NatAsToset}: 0 s 0 s s 0 s s s 0 s s s s 0 s s s s s 0
rewrites: 3236 in 6ms cpu (7ms real) (539333 rewrites/second)
The Maude Formal Environment 1.0b
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3p - August 30th 2016
    Coherence Checker 3p - August 30th 2016
    Maude Termination Tool 1.5j - August 11th 2014

rewrites: 48 in 6ms cpu (7ms real) (7899 rewrites/second)
set include BOOL off

rewrites: 76 in 1ms cpu (1ms real) (49159 rewrites/second)
The CRC has been set as current tool.

rewrites: 208897758 in 6383984ms cpu (7907860ms real) (32722 rewrites/second)
Church-Rosser check for MNAT-EXT-MLIST
The following critical pairs must be proved joinable:
  ccp MNAT-EXT-MLIST13340
    X@@@:[List{TOSET}{NatAsToset}]gr-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]N:Nat gr-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    if M:Nat < N:Nat = true /\ N:Nat <= M:Nat = true .
  ccp MNAT-EXT-MLIST13584
    X@@@:[List{TOSET}{NatAsToset}]N:Nat gr-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]gr-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    if N:Nat <= M:Nat = true /\ M:Nat < N:Nat = true .
  ccp MNAT-EXT-MLIST13854
    X@@@:[List{TOSET}{NatAsToset}]N:Nat insert-list(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]M:Nat N:Nat L:List{TOSET}{NatAsToset}Y@@@:[
    List{TOSET}{NatAsToset}]
    if M:Nat <= N:Nat = true /\ N:Nat < M:Nat = true .
  ccp MNAT-EXT-MLIST14098
    X@@@:[List{TOSET}{NatAsToset}]M:Nat N:Nat L:List{TOSET}{NatAsToset}Y@@@:[
    List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]N:Nat insert-list(L:List{TOSET}{
    NatAsToset},M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    if N:Nat < M:Nat = true /\ M:Nat <= N:Nat = true .
  ccp MNAT-EXT-MLIST14368
    X@@@:[List{TOSET}{NatAsToset}]leq-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]N:Nat leq-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    if N:Nat <= M:Nat = true /\ M:Nat < N:Nat = true .
  ccp MNAT-EXT-MLIST14612
    X@@@:[List{TOSET}{NatAsToset}]N:Nat leq-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]leq-elems(L:List{TOSET}{NatAsToset},
    M:Nat)Y@@@:[List{TOSET}{NatAsToset}]
    if M:Nat < N:Nat = true /\ N:Nat <= M:Nat = true .
  ccp MNAT-EXT-MLIST14875
    X@@@:[List{TOSET}{NatAsToset}]M:Nat merge(L':List{TOSET}{NatAsToset},N:Nat
    L:List{TOSET}{NatAsToset})Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]N:Nat merge(L:List{TOSET}{NatAsToset},M:Nat
    L':List{TOSET}{NatAsToset})Y@@@:[List{TOSET}{NatAsToset}]
    if N:Nat <= M:Nat = true /\ M:Nat <= N:Nat = true .
  ccp MNAT-EXT-MLIST15396 for nat16 and nat14
    X@@@:[List{TOSET}{NatAsToset}]0 Y@@@:[List{TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]s quot(d(N:Nat,M':NzNat),M':NzNat)Y@@@:[
    List{TOSET}{NatAsToset}]
    if M':NzNat < N:Nat = true /\ N:Nat < M':NzNat = true .
  ccp MNAT-EXT-MLIST15643 for nat14 and nat16
    X@@@:[List{TOSET}{NatAsToset}]s quot(d(N:Nat,M':NzNat),M':NzNat)Y@@@:[List{
    TOSET}{NatAsToset}]
    = X@@@:[List{TOSET}{NatAsToset}]0 Y@@@:[List{TOSET}{NatAsToset}]
    if N:Nat < M':NzNat = true /\ M':NzNat < N:Nat = true .
	The module is sort-decreasing.

Bye.
