MTT -> AProVE: 
( VAR A B C M N X@@@ )  ( THEORY   ( AC @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ )   ( AC @underscore@or@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ )   ( AC @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ )  )   ( RULES   @underscore@<=@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( 0 ,  N ) -> true   @underscore@<=@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( s@underscore@-@osb@Nat@csb@ ( M ) ,  0 ) -> false   @underscore@<=@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( s@underscore@-@osb@Nat@csb@ ( M ) ,  s@underscore@-@osb@Nat@csb@ ( N ) ) -> @underscore@<=@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( M ,  N )   @underscore@<@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( M ,  N ) -> not@underscore@-@osb@Bool@csb@ ( @underscore@<=@underscore@-@osb@Nat@csb@-@osb@Nat@csb@ ( N ,  M ) )   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  A ) -> A   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( B ,  C ) ) -> @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) ,  @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  C ) )   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  A ) -> false   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( true ,  A ) -> A   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  A ,  X@@@ ) -> @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  X@@@ )   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  X@@@ ,  @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( B ,  C ) ) -> @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( X@@@ ,  @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) ,  @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  C ) ) )   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  A ,  X@@@ ) -> @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  X@@@ )   @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( true ,  A ,  X@@@ ) -> @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  X@@@ )   @underscore@implies@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) -> not@underscore@-@osb@Bool@csb@ ( @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) ) )   @underscore@or@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) -> @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ,  @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) )   @underscore@or@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ,  X@@@ ) -> @underscore@or@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( X@@@ ,  @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ,  @underscore@and@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  B ) ) )   @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  A ) -> false   @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  A ) -> A   @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  A ,  X@@@ ) -> @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  X@@@ )   @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@-@osb@Bool@csb@ ( false ,  A ,  X@@@ ) -> @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( A ,  X@@@ )   not@underscore@-@osb@Bool@csb@ ( A ) -> @underscore@xor@underscore@-@osb@Bool@csb@-@osb@Bool@csb@ ( true ,  A )  )  

AProVE -> MTT: 
YES
Term Rewriting System R:

   [N, M, A, B, C, X@@@]
   AC [_and_-`[Bool`]-`[Bool`], _or_-`[Bool`]-`[Bool`], _xor_-`[Bool`]-`[Bool`]]
   _<=_-`[Nat`]-`[Nat`](0, N) -> true
   _<=_-`[Nat`]-`[Nat`](s_-`[Nat`](M), 0) -> false
   _<=_-`[Nat`]-`[Nat`](s_-`[Nat`](M), s_-`[Nat`](N)) -> _<=_-`[Nat`]-`[Nat`](M, N)
   _<_-`[Nat`]-`[Nat`](M, N) -> not_-`[Bool`](_<=_-`[Nat`]-`[Nat`](N, M))
   _and_-`[Bool`]-`[Bool`](A, A) -> A
   _and_-`[Bool`]-`[Bool`](A, _xor_-`[Bool`]-`[Bool`](B, C)) -> _xor_-`[Bool`]-`[Bool`](_and_-`[Bool`]-`[Bool`](A, B), _and_-`[Bool`]-`[Bool`](A, C))
   _and_-`[Bool`]-`[Bool`](false, A) -> false
   _and_-`[Bool`]-`[Bool`](true, A) -> A
   _and_-`[Bool`]-`[Bool`]-`[Bool`](A, A, X@@@) -> _and_-`[Bool`]-`[Bool`](A, X@@@)
   _and_-`[Bool`]-`[Bool`]-`[Bool`](A, X@@@, _xor_-`[Bool`]-`[Bool`](B, C)) -> _and_-`[Bool`]-`[Bool`](X@@@, _xor_-`[Bool`]-`[Bool`](_and_-`[Bool`]-`[Bool`](A, B), _and_-`[Bool`]-`[Bool`](A, C)))
   _and_-`[Bool`]-`[Bool`]-`[Bool`](false, A, X@@@) -> _and_-`[Bool`]-`[Bool`](false, X@@@)
   _and_-`[Bool`]-`[Bool`]-`[Bool`](true, A, X@@@) -> _and_-`[Bool`]-`[Bool`](A, X@@@)
   _implies_-`[Bool`]-`[Bool`](A, B) -> not_-`[Bool`](_xor_-`[Bool`]-`[Bool`](A, _and_-`[Bool`]-`[Bool`](A, B)))
   _or_-`[Bool`]-`[Bool`](A, B) -> _xor_-`[Bool`]-`[Bool`]-`[Bool`](A, B, _and_-`[Bool`]-`[Bool`](A, B))
   _or_-`[Bool`]-`[Bool`]-`[Bool`](A, B, X@@@) -> _or_-`[Bool`]-`[Bool`](X@@@, _xor_-`[Bool`]-`[Bool`]-`[Bool`](A, B, _and_-`[Bool`]-`[Bool`](A, B)))
   _xor_-`[Bool`]-`[Bool`](A, A) -> false
   _xor_-`[Bool`]-`[Bool`](false, A) -> A
   _xor_-`[Bool`]-`[Bool`]-`[Bool`](A, A, X@@@) -> _xor_-`[Bool`]-`[Bool`](false, X@@@)
   _xor_-`[Bool`]-`[Bool`]-`[Bool`](false, A, X@@@) -> _xor_-`[Bool`]-`[Bool`](A, X@@@)
   not_-`[Bool`](A) -> _xor_-`[Bool`]-`[Bool`](true, A)

Termination of R to be shown.





   R     ->Direct Termination



Direct Termination proof successful with the following AC-Compatible Recursive Path Order with Status:

Precedence:
0 > false
_<_-`[Nat`]-`[Nat`] > _<=_-`[Nat`]-`[Nat`] > true
_<_-`[Nat`]-`[Nat`] > not_-`[Bool`] > true
_<_-`[Nat`]-`[Nat`] > not_-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false
_and_-`[Bool`]-`[Bool`]-`[Bool`] > _and_-`[Bool`]-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false
_implies_-`[Bool`]-`[Bool`] > not_-`[Bool`] > true
_implies_-`[Bool`]-`[Bool`] > not_-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false
_implies_-`[Bool`]-`[Bool`] > _and_-`[Bool`]-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false
_or_-`[Bool`]-`[Bool`]-`[Bool`] > _or_-`[Bool`]-`[Bool`] > _and_-`[Bool`]-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false
_or_-`[Bool`]-`[Bool`]-`[Bool`] > _or_-`[Bool`]-`[Bool`] > _xor_-`[Bool`]-`[Bool`]-`[Bool`] > _xor_-`[Bool`]-`[Bool`] > false


Status:
_<=_-`[Nat`]-`[Nat`]: no status
0: no status
true: no status
s_-`[Nat`]: no status
false: no status
_<_-`[Nat`]-`[Nat`]: no status
not_-`[Bool`]: no status
_and_-`[Bool`]-`[Bool`]: flat status
_xor_-`[Bool`]-`[Bool`]: flat status
_and_-`[Bool`]-`[Bool`]-`[Bool`]: no status
_implies_-`[Bool`]-`[Bool`]: no status
_or_-`[Bool`]-`[Bool`]: flat status
_xor_-`[Bool`]-`[Bool`]-`[Bool`]: no status
_or_-`[Bool`]-`[Bool`]-`[Bool`]: no status

Removing all rules.


   R     ->Direct

       ->TRS2
         ->Dependency Pair Analysis



R contains no Dependency Pairs  and therefore no SCCs.


Termination of R successfully shown.

Duration: 
0:00 minutes



