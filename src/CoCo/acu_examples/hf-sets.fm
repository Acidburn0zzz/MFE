 (fmod HF-SETS is
    sort Magma .
    sort Set .
    subsort Set < Magma .
    op _`,_ : Set Magma -> Magma [ctor assoc comm] .
    op _`,_ : Magma Magma -> Magma [assoc comm] .
    op `{_`} : Magma -> Set [ctor] .
    op `{`} : -> Set [ctor] .

    vars M M' N : Magma .
    vars S S' : Set .
    eq [01]: M, M, M' = M, M' .
    eq [02]: M, M = M .

    op _in_ : Magma Magma -> Bool .

    eq [03]: M in {} = false .
    eq [04]: {} in {{M}} = false .
    eq [05]: {} in {{}} = true .
    eq [06]: {} in {{}, M} = true .
    eq [07]: {} in {{M}, N} = {} in {N} .

    eq [08]: {M} in {M'} = M in M' .

   ceq [09]: S in S', N = true if S in S' = true .
   ceq [10]: S in S', N = S in N if S in S' = false .

   ceq [11]: S, M in M' = M in M' if S in M' = true .
   ceq [12]: S, M in M' = false if S in M' = false .

    op _equiv_ : Magma Magma -> Bool [comm] .
    eq [13]: M equiv M = true .
    eq [14]: {} equiv {M} = false .
    eq [15]: {M} equiv {M'} = M equiv M' .
    eq [16]: S equiv S, M' = S equiv M' .
   ceq [17]: S equiv M = false if S in {M} = false .
   ceq [18]: S, M equiv M' = false if S in {M'} = false .
   ceq [19]: M equiv M' = false if {M} in {{M'}} = false .
  endfm)

  (fmod HF-SETS-INC is
     protecting HF-SETS .

     op _<=_ : Magma Magma -> Bool .

     vars M M' : Magma .
     vars S S' : Set .

     eq [20]: {} <= M = true .
    ceq [21]: {M} <= M' = true  if M in M' = true .
    ceq [22]: {M} <= M' = false if M in M' = false .
    ceq [23]: S, M <= M' = M <= M' if S <= M' = true .
    ceq [24]: S, M <= M' = false   if S <= M' = false .
   endfm)

   (fmod HF-SETS-EXTRAS-6 is
     pr HF-SETS-INC .
     vars M M' M'' : Magma .
     eq [25']: M in {M} = true .
     eq [26]: M in {M, M'} = true .
     eq [27]: M in {M}, M' = true .
     eq [28]: M in {M, M'}, M'' = true .
   endfm)
