red metaNarrowSearch(mod 'NAT is
  nil
  sorts '#Condition ; '#ConditionList ; 'Bool ; 'Nat ; 'NzNat ; 'Zero .
  subsort 'NzNat < 'Nat .
  subsort 'Zero < 'Nat .
  op '#_#_# : 'Nat '#ConditionList -> 'Nat [none] .
  op '#_#_#_# : 'Nat 'Zero '#ConditionList -> 'Nat [frozen(2 3)] .
  op '0 : nil -> 'Zero [ctor] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31)] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31)] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33)] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33)] .
  op '_/\_ : '#Condition '#ConditionList -> '#ConditionList [none] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37)] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37)] .
  op '_==_ : 'Nat 'Nat -> 'Bool [comm prec(51)] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37)] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37)] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e)] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e)] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51)] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e)] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e)] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'if_then_else_fi : 'Bool 'Nat 'Nat -> 'Nat [none] .
  op 'modExp : '`[Nat`] '`[Nat`] '`[NzNat`] -> '`[Nat`] [none] .
  op 'nil : nil -> '#ConditionList [none] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 's_ : 'Nat -> 'NzNat [ctor] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  none
  none
  rl '_*_['0.Zero,'N:Nat] => '#_#_#['0.Zero,'nil.#ConditionList] [none] .
endm, '#_#_#_#['_*_['0.Zero,'N:Nat],'0.Zero,'nil.#ConditionList], '#V:`[Nat`], none, '+, 1, unbounded, unbounded)
.
